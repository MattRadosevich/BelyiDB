s := BelyiDBInitialize();

/*
Base Field Data
*/

base_field_data := [* *];
K1<nu1> := RationalsAsNumberField();
place1 := InfinitePlaces(K1)[1];
conj1 := false;
CC<I> := ComplexField(20);
z1 := 0.00000000000000000000p20;
base_field_data_1 := [* K1, place1, conj1, z1 *];
Append(~base_field_data, base_field_data_1);
s`BelyiDBBaseFieldData := base_field_data;

/*
Belyi Maps
*/

curves := [* *];
maps := [* *];
K1<nu1> := K1;
X1 := Curve(ProjectiveSpace(PolynomialRing(K1, 2)));
KX1<x> := FunctionField(X1);
phi1 := KX1!((-39366*x^26 - 223929042642*x^24 - 423586689096057876*x^22 - 263918601785207810412108*x^20 + 5947226462925460590392469438*x^18 + 2193912005375539396678794095884554*x^16 + 5466891622905239657273209217611494216*x^14 - 6235167660014768429165654139346073026000584*x^12 - 128143961106663793836937497793677310806488554218*x^10 + 4981639115395621525798433280314495221938571307661666*x^8 + 213636341096365850346331392625741797133142964407792083980*x^6 + 2911156685861378560869351323805560164364990516611318792369620*x^4 + 17190089114342854264077432631939452214558832501538176337063369138*x^2 + 37594724893067822275537345166051581993240166680863991649157588304806)/(x^27 - 19683*x^26 + 116385579*x^25 - 111964521321*x^24 - 538310696532786*x^23 - 211793344548028938*x^22 + 3413263187865091122*x^21 - 131959300892603905206054*x^20 - 34731884949113784572479989*x^19 + 2973613231462730295196234719*x^18 - 15071888483554956111211918293279*x^17 + 1096956002687769698339397047942277*x^16 - 1449769982603904621272237042476223820*x^15 + 2733445811452619828636604608805747108*x^14 - 96736316850781556627558063450133226820052*x^13 - 3117583830007384214582827069673036513000292*x^12 - 3789552478099713065508327875996506466937255801*x^11 - 64071980553331896918468748896838655403244277109*x^10 - 82140148149917970533790547714784964076049062632003*x^9 + 2490819557697810762899216640157247610969285653830833*x^8 - 1016671835332499720441019922699267178506357253855800674*x^7 + 106818170548182925173165696312870898566571482203896041990*x^6 - 9184719310673759519889585795271314647516430985193461210494*x^5 + 1455578342930689280434675661902780082182495258305659396184810*x^4 - 98251538147821526429340607178437655547318429935632009242474675*x^3 + 8595044557171427132038716315969726107279416250769088168531684569*x^2 - 696198609130885597695136021593547814689632716312296141651066450089*x + 18797362446533911137768672583025790996620083340431995824578794152403));
Append(~curves, X1);
Append(~maps, phi1);
s`BelyiDBBelyiCurves := curves;
s`BelyiDBBelyiMaps := maps;

/*
auto printing
*/

s`BelyiDBName := "27T23-[3,3,3]-3,3,3,3,3,3,3,3,1,1,1-3,3,3,3,3,3,3,3,3-3,3,3,3,3,3,3,3,3-g0";
s`BelyiDBFilename := "27T23-[3,3,3]-3,3,3,3,3,3,3,3,1,1,1-3,3,3,3,3,3,3,3,3-3,3,3,3,3,3,3,3,3-g0.m";
s`BelyiDBDegree := 27;
s`BelyiDBOrders := \[ 3, 3, 3 ];
s`BelyiDBType := "Euclidean";
s`BelyiDBGenus := 0;
s`BelyiDBSize := 1;
s`BelyiDBPointedSize := 1;
s`BelyiDBPermutationTriple := [ PermutationGroup<27 |  
\[ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 1 ],
\[ 2, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27 ]:
 Order := 10888869450418352160768000000 > |
[ 1, 4, 6, 9, 16, 7, 3, 13, 2, 14, 5, 18, 21, 23, 22, 11, 20, 19, 12, 26, 8, 25, 10, 24, 15, 17, 27 ],
[ 15, 23, 24, 14, 25, 5, 21, 22, 17, 16, 9, 10, 4, 13, 26, 12, 11, 3, 7, 8, 19, 20, 27, 18, 6, 1, 2 ],
[ 26, 11, 19, 27, 17, 18, 25, 7, 13, 2, 10, 21, 20, 12, 5, 6, 15, 16, 24, 9, 14, 1, 4, 3, 8, 22, 23 ]
];
s`BelyiDBAutomorphismGroup := PermutationGroup<27 |  
\[ 27, 18, 26, 19, 11, 17, 20, 13, 12, 6, 16, 25, 21, 7, 2, 5, 10, 15, 22, 14, 8, 4, 3, 1, 9, 23, 24 ]:
 Order := 3 >;
s`BelyiDBPointedAutomorphismGroup := PermutationGroup<27 |   >;
s`BelyiDBMonodromyGroup := PermutationGroup<27 |  
\[ 1, 4, 6, 9, 16, 7, 3, 13, 2, 14, 5, 18, 21, 23, 22, 11, 20, 19, 12, 26, 8, 25, 10, 24, 15, 17, 27 ],
\[ 15, 23, 24, 14, 25, 5, 21, 22, 17, 16, 9, 10, 4, 13, 26, 12, 11, 3, 7, 8, 19, 20, 27, 18, 6, 1, 2 ],
\[ 26, 11, 19, 27, 17, 18, 25, 7, 13, 2, 10, 21, 20, 12, 5, 6, 15, 16, 24, 9, 14, 1, 4, 3, 8, 22, 23 ]:
 Order := 81 >;
s`BelyiDBPassport := [ PowerSequence(PermutationGroup<27 |  
\[ 1, 4, 6, 9, 16, 7, 3, 13, 2, 14, 5, 18, 21, 23, 22, 11, 20, 19, 12, 26, 8, 25, 10, 24, 15, 17, 27 ],
\[ 15, 23, 24, 14, 25, 5, 21, 22, 17, 16, 9, 10, 4, 13, 26, 12, 11, 3, 7, 8, 19, 20, 27, 18, 6, 1, 2 ],
\[ 26, 11, 19, 27, 17, 18, 25, 7, 13, 2, 10, 21, 20, 12, 5, 6, 15, 16, 24, 9, 14, 1, 4, 3, 8, 22, 23 ]:
 Order := 81 >) |
[ PermutationGroup<27 |  
\[ 1, 4, 6, 9, 16, 7, 3, 13, 2, 14, 5, 18, 21, 23, 22, 11, 20, 19, 12, 26, 8, 25, 10, 24, 15, 17, 27 ],
\[ 15, 23, 24, 14, 25, 5, 21, 22, 17, 16, 9, 10, 4, 13, 26, 12, 11, 3, 7, 8, 19, 20, 27, 18, 6, 1, 2 ],
\[ 26, 11, 19, 27, 17, 18, 25, 7, 13, 2, 10, 21, 20, 12, 5, 6, 15, 16, 24, 9, 14, 1, 4, 3, 8, 22, 23 ]:
 Order := 81 > |
[ 5, 4, 3, 12, 8, 17, 14, 1, 15, 6, 13, 2, 27, 20, 22, 21, 10, 19, 25, 7, 24, 9, 23, 16, 18, 26, 11 ],
[ 15, 14, 5, 17, 12, 21, 24, 4, 23, 13, 25, 3, 19, 27, 20, 9, 8, 7, 10, 1, 22, 6, 16, 18, 26, 11, 2 ],
[ 17, 5, 12, 27, 20, 19, 15, 3, 21, 4, 14, 8, 26, 18, 16, 7, 22, 11, 24, 2, 23, 1, 9, 6, 13, 25, 10 ]
]
];
s`BelyiDBPointedPassport := [ PowerSequence(PermutationGroup<27 |  
\[ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 1 ],
\[ 2, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27 ]:
 Order := 10888869450418352160768000000 >) |
[ PermutationGroup<27 |  
\[ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 1 ],
\[ 2, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27 ]:
 Order := 10888869450418352160768000000 > |
[ 1, 4, 6, 9, 16, 7, 3, 13, 2, 14, 5, 18, 21, 23, 22, 11, 20, 19, 12, 26, 8, 25, 10, 24, 15, 17, 27 ],
[ 15, 23, 24, 14, 25, 5, 21, 22, 17, 16, 9, 10, 4, 13, 26, 12, 11, 3, 7, 8, 19, 20, 27, 18, 6, 1, 2 ],
[ 26, 11, 19, 27, 17, 18, 25, 7, 13, 2, 10, 21, 20, 12, 5, 6, 15, 16, 24, 9, 14, 1, 4, 3, 8, 22, 23 ]
]
];

/*
Numerical Data
*/


/*
Powser Bases
*/


/*
Return for eval
*/

return s;
