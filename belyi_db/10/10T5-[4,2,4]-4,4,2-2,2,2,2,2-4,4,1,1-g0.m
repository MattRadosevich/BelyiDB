s := BelyiDBInitialize();

/*
Base Field Data
*/

base_field_data := [* *];
K1<nu1> := NumberField(Polynomial(\[1, 0, 1]));
place1 := InfinitePlaces(K1)[1];
conj1 := false;
CC<I> := ComplexField(20);
z1 := 0.00000000000000000000p20;
base_field_data_1 := [* K1, place1, conj1, z1 *];
Append(~base_field_data, base_field_data_1);
K2<nu2> := NumberField(Polynomial(\[1, 0, 1]));
place2 := InfinitePlaces(K2)[1];
conj2 := false;
CC<I> := ComplexField(20);
z2 := 0.00000000000000000000p20;
base_field_data_2 := [* K2, place2, conj2, z2 *];
Append(~base_field_data, base_field_data_2);
s`BelyiDBBaseFieldData := base_field_data;

/*
Belyi Maps
*/

curves := [* *];
maps := [* *];
K1<nu1> := K1;
X1 := Curve(ProjectiveSpace(PolynomialRing(K1, 2)));
KX1<x> := FunctionField(X1);
phi1 := KX1!((1/10000*x^10 + 1/250*(-8*nu1 + 81)*x^9 + 1/25*(-2288*nu1 + 9541)*x^8 + 1/25*(-2358528*nu1 + 4592096)*x^7 + 1/125*(-4993627136*nu1 + 2500718752)*x^6 + 1/625*(-2964670257152*nu1 - 3772510638336)*x^5 + 1/125*(55550128021504*nu1 + 5759678966272)*x^4 + 1/25*(-515846781861888*nu1 - 20052372496384)*x^3 + 1/25*(9156971321884672*nu1 + 3523563708829696)*x^2 + 1/125*(-284121617840472064*nu1 - 291375884856164352)*x + 1/625*(1868791866511589376*nu1 + 5964068825865453568))/(x^9 + 1/5*(-1408*nu1 - 3744)*x^8 + 1/25*(4491264*nu1 + 3669952)*x^7 + 1/125*(-4145334272*nu1 + 1046997504)*x^6 + 1/625*(197597085696*nu1 - 2675664476672)*x^5 + 1/125*(40582117163008*nu1 + 13457034092544)*x^4 + 1/25*(-143202038317056*nu1 + 562043749384192)*x^3 + 1/5*(-3896717748994048*nu1 + 903100650356736)*x^2 + (-7651277924204544*nu1 - 6438784522452992)*x));
Append(~curves, X1);
Append(~maps, phi1);
K2<nu2> := K2;
X2 := Curve(ProjectiveSpace(PolynomialRing(K2, 2)));
KX2<x> := FunctionField(X2);
phi2 := KX2!((1/10000*x^10 + 1/250*(8*nu2 + 81)*x^9 + 1/25*(2288*nu2 + 9541)*x^8 + 1/25*(2358528*nu2 + 4592096)*x^7 + 1/125*(4993627136*nu2 + 2500718752)*x^6 + 1/625*(2964670257152*nu2 - 3772510638336)*x^5 + 1/125*(-55550128021504*nu2 + 5759678966272)*x^4 + 1/25*(515846781861888*nu2 - 20052372496384)*x^3 + 1/25*(-9156971321884672*nu2 + 3523563708829696)*x^2 + 1/125*(284121617840472064*nu2 - 291375884856164352)*x + 1/625*(-1868791866511589376*nu2 + 5964068825865453568))/(x^9 + 1/5*(1408*nu2 - 3744)*x^8 + 1/25*(-4491264*nu2 + 3669952)*x^7 + 1/125*(4145334272*nu2 + 1046997504)*x^6 + 1/625*(-197597085696*nu2 - 2675664476672)*x^5 + 1/125*(-40582117163008*nu2 + 13457034092544)*x^4 + 1/25*(143202038317056*nu2 + 562043749384192)*x^3 + 1/5*(3896717748994048*nu2 + 903100650356736)*x^2 + (7651277924204544*nu2 - 6438784522452992)*x));
Append(~curves, X2);
Append(~maps, phi2);
s`BelyiDBBelyiCurves := curves;
s`BelyiDBBelyiMaps := maps;

/*
auto printing
*/

s`BelyiDBName := "10T5-[4,2,4]-4,4,2-2,2,2,2,2-4,4,1,1-g0";
s`BelyiDBFilename := "10T5-[4,2,4]-4,4,2-2,2,2,2,2-4,4,1,1-g0.m";
s`BelyiDBDegree := 10;
s`BelyiDBOrders := \[ 4, 2, 4 ];
s`BelyiDBType := "Euclidean";
s`BelyiDBGenus := 0;
s`BelyiDBSize := 2;
s`BelyiDBPointedSize := 2;
s`BelyiDBPermutationTriple := [ PermutationGroup<10 |  
\[ 2, 3, 4, 5, 6, 7, 8, 9, 10, 1 ],
\[ 2, 1, 3, 4, 5, 6, 7, 8, 9, 10 ]:
 Order := 3628800 > |
[ 6, 3, 10, 7, 4, 1, 8, 5, 2, 9 ],
[ 10, 9, 8, 7, 6, 5, 4, 3, 2, 1 ],
[ 5, 2, 9, 6, 3, 10, 7, 4, 1, 8 ]
];
s`BelyiDBAutomorphismGroup := PermutationGroup<10 |  
\[ 6, 7, 8, 9, 10, 1, 2, 3, 4, 5 ]:
 Order := 2 >;
s`BelyiDBPointedAutomorphismGroup := PermutationGroup<10 |  
\[ 6, 7, 8, 9, 10, 1, 2, 3, 4, 5 ]:
 Order := 2 >;
s`BelyiDBMonodromyGroup := PermutationGroup<10 |  
\[ 6, 3, 10, 7, 4, 1, 8, 5, 2, 9 ],
\[ 10, 9, 8, 7, 6, 5, 4, 3, 2, 1 ],
\[ 5, 2, 9, 6, 3, 10, 7, 4, 1, 8 ]:
 Order := 40 >;
s`BelyiDBPassport := [ PowerSequence(PermutationGroup<10 |  
\[ 6, 3, 10, 7, 4, 1, 8, 5, 2, 9 ],
\[ 10, 9, 8, 7, 6, 5, 4, 3, 2, 1 ],
\[ 5, 2, 9, 6, 3, 10, 7, 4, 1, 8 ]:
 Order := 40 >) |
[ PermutationGroup<10 |  
\[ 6, 3, 10, 7, 4, 1, 8, 5, 2, 9 ],
\[ 10, 9, 8, 7, 6, 5, 4, 3, 2, 1 ],
\[ 5, 2, 9, 6, 3, 10, 7, 4, 1, 8 ]:
 Order := 40 > |
[ 6, 9, 2, 5, 8, 1, 4, 7, 10, 3 ],
[ 10, 9, 8, 7, 6, 5, 4, 3, 2, 1 ],
[ 5, 8, 1, 4, 7, 10, 3, 6, 9, 2 ]
],
[ PermutationGroup<10 |  
\[ 6, 3, 10, 7, 4, 1, 8, 5, 2, 9 ],
\[ 10, 9, 8, 7, 6, 5, 4, 3, 2, 1 ],
\[ 5, 2, 9, 6, 3, 10, 7, 4, 1, 8 ]:
 Order := 40 > |
[ 6, 3, 10, 7, 4, 1, 8, 5, 2, 9 ],
[ 8, 7, 6, 5, 4, 3, 2, 1, 10, 9 ],
[ 3, 10, 7, 4, 1, 8, 5, 2, 9, 6 ]
]
];
s`BelyiDBPointedPassport := [ PowerSequence(PermutationGroup<10 |  
\[ 2, 3, 4, 5, 6, 7, 8, 9, 10, 1 ],
\[ 2, 1, 3, 4, 5, 6, 7, 8, 9, 10 ]:
 Order := 3628800 >) |
[ PermutationGroup<10 |  
\[ 2, 3, 4, 5, 6, 7, 8, 9, 10, 1 ],
\[ 2, 1, 3, 4, 5, 6, 7, 8, 9, 10 ]:
 Order := 3628800 > |
[ 6, 3, 10, 7, 4, 1, 8, 5, 2, 9 ],
[ 10, 9, 8, 7, 6, 5, 4, 3, 2, 1 ],
[ 5, 2, 9, 6, 3, 10, 7, 4, 1, 8 ]
],
[ PermutationGroup<10 |  
\[ 2, 3, 4, 5, 6, 7, 8, 9, 10, 1 ],
\[ 2, 1, 3, 4, 5, 6, 7, 8, 9, 10 ]:
 Order := 3628800 > |
[ 6, 9, 2, 5, 8, 1, 4, 7, 10, 3 ],
[ 4, 3, 2, 1, 10, 9, 8, 7, 6, 5 ],
[ 9, 2, 5, 8, 1, 4, 7, 10, 3, 6 ]
]
];

/*
Numerical Data
*/


/*
Powser Bases
*/


/*
Return for eval
*/

return s;
