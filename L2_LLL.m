load "scripts/plane_equation.m"
C;
C_plane;
F := DefiningEquation(C_plane);
F;
vals := GetSpecializationValues();
val := vals[2];
val;
f := SpecializePolynomial(F,val);
f;
K<nu> := NumberField(f);
K;
f2 := DefiningEquation(K);
DefiningPolynomial(K);
f2 := $1;
Polredabs;
Polredabs(f);
Polredabs(f2);
f_abs, cs := Polredabs(f2);
K_abs := NumberField(f_abs);
K_abs;
K;
#cs;
Polredabs : Maximal;
f_abs;
cs;
Evaluate(f_abs,cs[1]);
$1 + 0.0;
K_abs!K.1;
K;
K_abs;
_, iota := IsIsomorphic(K,Kabs);
_, iota := IsIsomorphic(K,K_abs);
iota(K.1);
cs;
(iota^-1)(K_abs.1);
nu eq K.1;
OK := Integers(K);
OK!nu;
Basis(OK);
basis_K := $1;
[K!el : el in basis_K];
cs;
OK!(iota^-1)(K_abs.1);
f;
cs;
&+[cs[i]*K_abs.1^i : i in [0..3]];
&+[cs[i+1]*K_abs.1^i : i in [0..3]];
K.1;
iota(K.1);
cs;
Lattice(OK);
lat_K := $1;
ShortVectors(lat_K);
ShortVectors;
LLL(lat_K);
(iota^-1)(K_abs.1);
OK!$1;
